using System;
using System.Collections.Generic;
using System.Globalization;
using System.Net.Http;
using System.Text;
using System.Threading.Tasks;

namespace IoTChallenge.Universal.Core
{
    public static partial class documentDB
    {
        private static StringContent GetStringContent(string body)
        {
            StringContent stringContent = new StringContent(body);
            stringContent.Headers.ContentLength = Encoding.UTF8.GetByteCount(body);
            return stringContent;
        }
        private async static Task<HttpClient> GetClient(string verb, string accountID, string mainID)
        {
            HttpClient client = new HttpClient();
            string date = DateTime.UtcNow.ToString("R", CultureInfo.InvariantCulture);
            string authHeader = await Authenticate.GetAuthorizationHeader(verb, date, mainID);
            client.DefaultRequestHeaders.Add("authorization", authHeader);
            client.DefaultRequestHeaders.Add("x-ms-date", date);
            client.DefaultRequestHeaders.Add("Accept", "application/json");
            client.DefaultRequestHeaders.Add("Host", String.Format("{0}.documents.azure.com", accountID));
            client.DefaultRequestHeaders.Add("x-ms-consistency-level", "Session");
            client.DefaultRequestHeaders.Add("x-ms-version", "2015-04-08");
            return client;
        }

        /// <summary>
        /// Async method that returns the _rid ID generated by Azure for a specific document given the ID assigned by the User.
        /// It is mostly recommended that the 'getDocuments' method is called when the App starts so you already have all the documents's Unique IDs and User generated IDs
        /// </summary>
        /// <param name="accountID">Document DB Account name</param>
        /// <param name="dbID">Unique ID generated for the Database by Azure</param>
        /// <param name="collectionID">Unique ID generated for the Collection by Azure</param>
        /// <param name="documentID">ID generated by the User when the Document was created</param>
        /// <returns>A string containing the _rid for the Document OR a message "No document ID identified" in case of failure</returns>
        public async static Task<string> GetUniqueIDforDocument(string accountID, string dbID, string collectionID, string documentID)
        {
            List<genericDocument> docs = await getDocuments(accountID, dbID, collectionID);
            foreach (genericDocument item in docs)
            {
                if (item.id == documentID)
                    return item._rid;
            }
            return "No document ID identified";
            
        }
    }
}
